# This is an example of a configuration file for running a BBH injection with bilby_pipe

#General settings
#----------------
label = injection_type_II # This is the label for the run
outdir = injection_type_II # This is the output directory name

#Detectors settings
#------------------
detectors = [H1, L1, V1] # These are the detectors to use
psd-dict = {H1:aligo_O4high_psd.txt, L1:aligo_O4high_psd.txt, V1:avirgo_O4high_NEW_psd.txt} # These are the PSDs to use. You can use PSD files from your local computer as well
gaussian-noise = True # We assume the noise is Gaussian

#Data analysis settings
#----------------------
duration = 4 # This is the duration of the data. Change this for BNS
minimum-frequency = 20
reference-frequency = 20
sampling_frequency = 2048
waveform-approximant = IMRPhenomXPHM # This is the waveform approximant to use in the PE
frequency-domain-source-model = lal_binary_black_hole
generation-function = bilby.gw.conversion.generate_all_bbh_parameters

#Injection settings
#------------------
injection-file = injections_type_II_image.dat
n-simulation = 2 # This is the number of injections to perform
injection-waveform-approximant = IMRPhenomXPHM # This is the waveform approximant to use in the injection
injection-frequency-domain-source-model = modwaveforms.fdsm.one_image_BBH#lal_binary_black_hole

#Prior settings
#--------------
prior_file = bbh_one_image.prior
trigger-time = 0.0 # This is the trigger GPS time for the injection in seconds. 
# Check that this matches your injection geocent_time (within the duration of the data)
enforce-signal-duration = False

#Sampler settings
#-----------------
sampler = dynesty # This is the sampler to use. Alternative are emcee, ptemcee, ultranest, cpnest, dynesty, nestle, pymultinest, pypolychord
sampler-kwargs = {'nlive': 1000} # This is the number of live points to use
n-parallel = 1 # This is the number of parallel runs to use

#Miscellaneous settings
#----------------------
create-summary = True

#Cluster settings
#--------------
scheduler = slurm
request-cpus = 64 # This is the number of CPUs to request. Check with your cluster
transfer-files = False 
scheduler-analysis-time = 12:00:00 # This is the maximum time to run the analysis
scheduler-args = "partition=astro3_short" # This is the cluster partition to use
scheduler-env = igwn-py310 # This is the environment to use for the run